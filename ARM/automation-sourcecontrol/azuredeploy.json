{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "automationAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Automation account to deploy to."
      }
    },
    "automationRegionId": {
      "type": "string",
      "defaultValue": "East US 2",
      "allowedValues": [
        "Japan East",
        "East US 2",
        "West Europe",
        "Southeast Asia",
        "South Central US",
        "Central India"
      ],
      "metadata": {
        "description": "The region the Automation account is located in."
      }
    },
    "WorkspaceID": {
      "type": "string",
      "metadata": {
        "description": "The Workspace ID of a Log Analytics environment with the automation solution deployed to it."
      }
    },
    "jobid": {
      "type": "string",
      "metadata": {
        "description": "The job id to compile the configuration"
      }
    }
  },
  "variables": {
    "runbookName": "Invoke-GitRepositorySync",
    "scriptUri": "https://raw.githubusercontent.com/randorfer/ScorchDev/master/Runbooks/GitRepositorySync/Invoke-GitRepositorySync.ps1",
    "runbookDescription": "Starts a git repository sync",
    "sku": "Free",
    "dscModules": {
      "xPSDesiredStateConfiguration": {
        "moduleName": "xPSDesiredStateConfiguration",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/xPSDesiredStateConfiguration.zip"
      },
      "cGit": {
        "moduleName": "cGit",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/cGit.zip"
      },
      "cWindowscomputer": {
        "moduleName": "cWindowscomputer",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/cWindowsComputer.zip"
      },
      "cAzureAutomation": {
        "moduleName": "cAzureAutomation",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/cAzureAutomation.zip"
      }
    },
    "psModules": {
      "AzureRMProfile": {
        "moduleName": "AzureRM.Profile",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/AzureRM.Profile.zip"
      },
      "AzureRMAutomation": {
        "moduleName": "AzureRM.Automation",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/AzureRM.Automation.zip"
      },
      "SCOrchDevAzureAutomationIntegration": {
        "moduleName": "SCOrchDev-AzureAutomationIntegration",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/SCOrchDev-AzureAutomationIntegration.zip"
      },
      "SCOrchDevExcpetion": {
        "moduleName": "SCOrchDev-Excpetion",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/SCOrchDev-Excpetion.zip"
      },
      "SCOrchDevFile": {
        "moduleName": "SCOrchDev-File",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/SCOrchDev-File.zip"
      },
      "SCOrchDevGitIntegration": {
        "moduleName": "SCOrchDev-GitIntegration",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/SCOrchDev-GitIntegration.zip"
      },
      "SCOrchDevUtility": {
        "moduleName": "SCOrchDev-Utility",
        "moduleUri": "https://github.com/randorfer/RunbookExample/raw/vNext/ARM/automation-sourcecontrol/SCOrchDev-Utility.zip"
      }
    },
    "automationApiVersion": "2015-10-31",
    "configurationName": "AzureAutomation.HybridRunbookWorker",
    "configurationUri": "https://raw.githubusercontent.com/randorfer/ScorchDev/master/DSC/AzureAutomation.ps1",
    "configurationDescription": "Azure Automation Runbook worker default configuration",
    "dscOverwrite": "true"
  },
  "resources": [
    {
      "name": "[parameters('automationAccountName')]",
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2015-01-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [ ],
      "tags": { },
      "properties": {
        "sku": {
          "name": "[variables('sku')]"
        }
      },
      "resources": [
        {
          "name": "[variables('runbookName')]",
          "type": "runbooks",
          "apiVersion": "2015-01-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "tags": { },
          "properties": {
            "runbookType": "Script",
            "logProgress": "false",
            "logVerbose": "false",
            "description": "[variables('runbookDescription')]",
            "publishContentLink": {
              "uri": "[variables('scriptUri')]",
              "version": "1.0.0.0"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('dscModules').xPSDesiredStateConfiguration.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('dscModules').xPSDesiredStateConfiguration.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('dscModules').cGit.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('dscModules').cGit.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('dscModules').cWindowscomputer.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('dscModules').cWindowscomputer.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('dscModules').cAzureAutomation.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('dscModules').cAzureAutomation.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').AzureRMProfile.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').AzureRMProfile.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').AzureRMAutomation.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').AzureRMAutomation.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').SCOrchDevUtility.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').SCOrchDevUtility.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').SCOrchDevException.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').SCOrchDevException.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').SCOrchDevFile.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').SCOrchDevFile.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').SCOrchDevGitIntegration.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').SCOrchDevGitIntegration.ModuleUri]"
            }
          }
        },
        {
          "name": "[concat(parameters('automationAccountName'), '/', variables('psModules').SCOrchDevAzureAutomationIntegration.ModuleName)]",
          "type": "microsoft.automation/automationAccounts/Modules",
          "apiVersion": "[variables('automationApiVersion')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "contentLink": {
              "uri": "[variables('psModules').SCOrchDevAzureAutomationIntegration.ModuleUri]"
            }
          }
        },
        {
          "name": "[variables('configurationName')]",
          "type": "Configurations",
          "apiVersion": "[variables('automationApiVersion')]",
          "location": "[parameters('automationRegionId')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
          ],
          "properties": {
            "logVerbose": "false",
            "description": "[variables('configurationDescription')]",
            "state": "Published",
            "overwrite": "[variables('dscOverwrite')]",
            "Source": {
              "type": "uri",
              "Value": "[variables('configurationURI')]"
            }
          }
        },
        {
          "name": "[parameters('jobid')]",
          "type": "Compilationjobs",
          "apiVersion": "[variables('automationApiVersion')]",
          "location": "parameters('automationRegionId')]",
          "tags": { },
          "dependsOn": [
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]",
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Modules/',variables('dscModules').xPSDesiredStateConfiguration.ModuleName)]",
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Modules/',variables('dscModules').cGit.ModuleName)]",
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Modules/',variables('dscModules').cWindowscomputer.ModuleName)]",
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Modules/',variables('dscModules').cAzureAutomation.ModuleName)]",
            "[concat('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'),'/Configurations/', variables('configurationName'))]"
          ],
          "properties": {
            "configuration": {
              "name": "[variables('configurationName')]"
            }
          }
        }
      ]
    }
  ],
  "outputs": { }
}